# render.yaml
# Render Blueprint to deploy Fraud Radar project

# 1. PostgreSQL Database for MLflow Tracking (and potentially Backend)
databases:
  - name: fraudradar-db
    plan: free # Use 'starter' or 'standard' for production if needed
    databaseName: fraudradar_db
    user: fraudradar_user

services:
  # 2. MLflow Tracking Server
  - type: web
    name: fraudradar-mlflow
    env: docker
    dockerfilePath: ./Dockerfile.mlflow
    dockerContext: .
    envVars:
      - key: PORT
        value: 5000
      - key: DATABASE_URL
        fromDatabase:
          name: fraudradar-db
          property: connectionString
      - key: MLFLOW_ARTIFACT_BUCKET_NAME # Must be set as a Render secret in dashboard
        sync: false
      - key: AWS_ACCESS_KEY_ID # Must be set as a Render secret in dashboard
        sync: false
      - key: AWS_SECRET_ACCESS_KEY # Must be set as a Render secret in dashboard
        sync: false
    plan: free
    healthCheckPath: /

  # 3. Backend Web Service (Python FastAPI)
  - type: web
    name: fraudradar-backend
    env: docker
    dockerfilePath: ./app/backend/Dockerfile
    dockerContext: . # Context is root so 'app/backend' and 'models' are included
    envVars:
      - key: PORT
        value: 8000
      - key: MLFLOW_TRACKING_URI # Internal URL for MLflow service
        fromService:
          type: web
          name: fraudradar-mlflow
          property: host
      - key: DATABASE_URL # If backend needs database access
        fromDatabase:
          name: fraudradar-db
          property: connectionString
      - key: FRONTEND_URL # For CORS, set in Render dashboard for this service
        sync: false
    plan: free
    healthCheckPath: /

  # 4. Frontend Web Service (React/Nginx)
  - type: web
    name: fraudradar-frontend
    env: docker
    dockerfilePath: ./app/frontend/Dockerfile
    dockerContext: ./app/frontend # Context is frontend directory
    envVars:
      - key: PORT
        value: 80
      - key: REACT_APP_BACKEND_HOST # Internal hostname of backend service
        fromService:
          type: web
          name: fraudradar-backend
          property: host
      - key: REACT_APP_BACKEND_PORT # Internal port of backend service
        fromService:
          type: web
          name: fraudradar-backend
          property: port
    plan: free
    healthCheckPath: /

  # 5. Prefect Pipeline Worker (as a Background Worker)
  - type: worker
    name: fraudradar-prefect-worker
    env: docker
    dockerfilePath: ./Dockerfile.prefect
    dockerContext: . # Context is root
    envVars:
      - key: PREFECT_API_URL # Your Prefect Cloud API URL (e.g., https://api.prefect.cloud/api/accounts/...)
        sync: false
      - key: PREFECT_API_KEY # Your Prefect Cloud API Key (must be a secret)
        sync: false
      - key: MLFLOW_TRACKING_URI # Internal URL for MLflow service
        fromService:
          type: web
          name: fraudradar-mlflow
          property: host
      - key: DATABASE_URL # If Prefect flows need database access
        fromDatabase:
          name: fraudradar-db
          property: connectionString
      - key: AWS_ACCESS_KEY_ID # For S3 access in Prefect flows, if needed (secret)
        sync: false
      - key: AWS_SECRET_ACCESS_KEY # For S3 access in Prefect flows, if needed (secret)
        sync: false
      - key: S3_BUCKET_NAME # If Prefect flows upload non-MLflow artifacts to S3 (secret)
        sync: false
    plan: free
