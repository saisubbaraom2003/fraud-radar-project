# # app/frontend/nginx.conf
# # Nginx configuration for serving the React app and robustly proxying API requests.

# server {
#   listen 80;

#   # Define resolvers for dynamic upstream resolution.
#   # 127.0.0.11 is Docker's internal DNS. Adding Google's public DNS as fallbacks.
#   resolver 127.0.0.11 8.8.8.8 8.8.4.4 valid=10s;

#   # Root directory for static files (the React build output)
#   root /usr/share/nginx/html;
#   index index.html;

#   location / {
#     try_files $uri /index.html;
#   }

#   location /api {
#     # Set the backend host as a variable. Nginx will resolve this at runtime.
#     set $backend_target "http://fraudradar-backend:8000"; # <--- Explicit variable for target

#     # Proxy requests to the dynamically resolved backend target.
#     proxy_pass $backend_target; # <--- Use the variable here

#     # Add a connect timeout for the proxy
#     proxy_connect_timeout 10s;

#     # Pass original host and client IP headers
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#   }
# }
# app/frontend/nginx.conf
# Nginx configuration for serving the React app and proxying API requests.

server {
  listen 80;

  # Root directory for static files (the React build output)
  root /usr/share/nginx/html;
  index index.html;

  location / {
    try_files $uri /index.html;
  }

  location /api {
    # Directly proxy requests to the internal backend service.
    # Render's internal DNS should resolve 'fraudradar-backend' to its IP.
    proxy_pass http://fraudradar-backend:8000; # <--- Simplest direct proxy

    # Pass original host and client IP headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
